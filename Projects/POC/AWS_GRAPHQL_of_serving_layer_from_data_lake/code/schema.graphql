schema {
    query: Query
}

type Query {
    getCountry: [Country]
}

type Country {
    id: ID!
    name: String!
    region: String!
    prefixPhone: String!
    currencyISO: String!
}

type ProductSize {
    name: String
    dimX: Float
    dimY: Float
    dimZ: Float
    id: ID!
}

type Service {
    name: String
    id: ID!
}

type Client {
    commercialName: String
    businessName: String
    cityID: City!
    id: ID!
    address: String
    serviceIDS: String
    enterprise_key: String! 
}

type City {
    timezone: String!
    name: String!
    countryID: Country!
    id: ID!
}

type Route {
    code: String!
    id: ID!
    priceOfficial: Float
    priceOriginal: Float
    priceWithIncentive: Float
    distance: Float
    cityID: City
}

type Trackcode {
    crossdocking: Boolean
    id: ID!
    creation: String
    clientID: Client
    pickupAddress: String
    dropAddress: String 
    serviceID: Service!
    productDescription: String
    productPrice: String 
    productSizeID: ProductSize!
    productWeight: String 
    dropPoint: String
    pickUpPoint: String
}

type Order {
    trackcodeID : trackcode
    routeID: Route
    id: ID!
    promiseTime: String
    startTime: String
    end_time: String
}

