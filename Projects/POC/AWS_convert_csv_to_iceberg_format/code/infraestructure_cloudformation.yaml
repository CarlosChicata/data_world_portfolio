AWSTemplateFormatVersion: "2010-09-09"
Description: "Automaticed creation of all infraestructure to support POC case 4."

Parameters:
  DatabaseInGlue:
    Type: String
    MinLength: "4"
    Default: "db_poc_case_4"
    Description: Name of DB in AWS Glue database for POC case 4

  StorageLayerS3:
    Type: String
    MinLength: "4"
    Default: "s3-storage-layer"
    Description: Name of S3 for POC case 4


Resources:
  ## Resource to store all table in format iceberg
  DataStorageLayer:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref StorageLayerS3
      PublicAccessBlockConfiguration:
        BlockPublicAcls: False
        BlockPublicPolicy: False
        IgnorePublicAcls: False
        RestrictPublicBuckets: False
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred

  ## Resource to prepare database (AWS GLUE)
  DBGlue:
    Type: "AWS::Glue::Database"
    Properties:
      DatabaseInput:
        Description: "Database to store all tables in glue"
        Name: !Ref DatabaseInGlue
        LocationUri: "s3://s3-storage-layer/glue/"
      CatalogId: !Ref AWS::AccountId ## reference the same AWS account

  ## Role in aws glue job
  AWSGlueJobRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:  "*"
                Resource: "*"
      Path: "/" 

  ## AWS Glue job
  CSVToIcebergGlueJob:
    Type: "AWS::Glue::Job"
    Properties:
      Role: !Ref AWSGlueJobRole
      Name: "CSVToIcebergTransformer"
      Command : 
        Name: "glueetl"
        PythonVersion: "3.9"
        ScriptLocation: "s3://s3-storage-layer/script/emulator_glue_job.py"
      DefaultArguments:
        "--bucket_origin": "s3-storage-layer/raw-csv-file"
        "--object_bucket_origin": "faked_orders.csv"
        "--datalake-formats": "iceberg"
        "--conf": "spark.sql.extensions=org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions --conf spark.sql.catalog.glue_catalog=org.apache.iceberg.spark.SparkCatalog --conf spark.sql.catalog.glue_catalog.warehouse=s3://<BUCKET_NAME>/data/ticketdata_iceberg --conf spark.sql.catalog.glue_catalog.catalog-impl=org.apache.iceberg.aws.glue.GlueCatalog --conf spark.sql.catalog.glue_catalog.io-impl=org.apache.iceberg.aws.s3.S3FileI"
      MaxRetries: 0
      Description: "transform files from CSV format to iceberg format script"




